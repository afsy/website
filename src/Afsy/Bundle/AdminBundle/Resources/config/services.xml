<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services/services-1.0.xsd">
    <services>
        <service id="afsy.oauth.author.provider" class="Afsy\Bundle\AdminBundle\OAuth\Provider\AuthorEntityProvider">
           <argument type="service" id="doctrine.orm.entity_manager" />
        </service>

        <service id="afsy.tag.tag_manager" class="Afsy\Bundle\AdminBundle\Tag\TagManager">
           <argument type="service" id="doctrine.orm.entity_manager" />
           <argument>Afsy\Bundle\CoreBundle\Entity\Tag</argument>
           <argument>Afsy\Bundle\CoreBundle\Entity\Tagging</argument>
        </service>

        <service id="sonata.admin.article" class="Afsy\Bundle\AdminBundle\Admin\ArticleAdmin">
            <tag name="sonata.admin" manager_type="orm" label="Article" group="Content" />
            <argument />
            <argument>Afsy\Bundle\CoreBundle\Entity\Article</argument>
            <argument>SonataAdminBundle:CRUD</argument>
            <call method="setTranslationDomain">
                <argument>AfsyAdminBundle</argument>
            </call>
            <call method="setTagManager">
                <argument type='service' id='afsy.tag.tag_manager' />
            </call>
        </service>

        <service id="sonata.admin.author" class="Afsy\Bundle\AdminBundle\Admin\AuthorAdmin">
            <tag name="sonata.admin" manager_type="orm" label="Author" group="People" />
            <argument />
            <argument>Afsy\Bundle\CoreBundle\Entity\Author</argument>
            <argument>SonataAdminBundle:CRUD</argument>
            <call method="setTranslationDomain">
                <argument>AfsyAdminBundle</argument>
            </call>
        </service>

        <service id="afsy.listeners.markdown_parser" class="Afsy\Bundle\AdminBundle\Listeners\MarkdownParserListener">
            <argument type="service" id="markdown.parser" />
            <tag name="doctrine.event_listener" event="prePersist" />
            <tag name="doctrine.event_listener" event="preUpdate" />
        </service>
    </services>
</container>
